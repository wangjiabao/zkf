syntax = "proto3";

package api;


import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "/api;api";
option java_multiple_files = true;
option java_package = "api";

service App {
	rpc EthAuthorize (EthAuthorizeRequest) returns (EthAuthorizeReply) {
		option (google.api.http) = {
			post: "/api/app_server/eth_authorize"
			body: "send_body"
		};
	};

	rpc RecommendUpdate (RecommendUpdateRequest) returns (RecommendUpdateReply) {
		option (google.api.http) = {
			post: "/api/app_server/recommend_update"
			body: "send_body"
		};
	};

	rpc UserInfo (UserInfoRequest) returns (UserInfoReply) {
		option (google.api.http) = {
			get: "/api/app_server/user_info"
		};
	};

	rpc RewardList (RewardListRequest) returns (RewardListReply) {
		option (google.api.http) = {
			get: "/api/app_server/reward_list"
		};
	};

	rpc RecommendRewardList (RecommendRewardListRequest) returns (RecommendRewardListReply) {
		option (google.api.http) = {
			get: "/api/app_server/recommend_reward_list"
		};
	};

	rpc FeeRewardList (FeeRewardListRequest) returns (FeeRewardListReply) {
		option (google.api.http) = {
			get: "/api/app_server/fee_reward_list"
		};
	};

	rpc WithdrawList (WithdrawListRequest) returns (WithdrawListReply) {
		option (google.api.http) = {
			get: "/api/app_server/withdraw_list"
		};
	};

	rpc TradeList (TradeListRequest) returns (TradeListReply) {
		option (google.api.http) = {
			get: "/api/app_server/trade_list"
		};
	};

	rpc TranList (TranListRequest) returns (TranListReply) {
		option (google.api.http) = {
			get: "/api/app_server/tran_list"
		};
	};

	rpc RecommendList (RecommendListRequest) returns (RecommendListReply) {
		option (google.api.http) = {
			get: "/api/app_server/recommend_list"
		};
	};

	rpc PasswordChange (PasswordChangeRequest) returns (PasswordChangeReply) {
		option (google.api.http) = {
			post: "/api/app_server/password_change"
			body: "send_body"
		};
	};

	rpc Withdraw (WithdrawRequest) returns (WithdrawReply) {
		option (google.api.http) = {
			post: "/api/app_server/withdraw"
			body: "send_body"
		};
	};

	rpc Trade (WithdrawRequest) returns (WithdrawReply) {
		option (google.api.http) = {
			post: "/api/app_server/trade"
			body: "send_body"
		};
	};

	rpc Tran (TranRequest) returns (TranReply) {
		option (google.api.http) = {
			post: "/api/app_server/tran"
			body: "send_body"
		};
	};

	rpc GetTrade (GetTradeRequest) returns (GetTradeReply) {
		option (google.api.http) = {
			post: "/api/app_server/get_trade"
			body: "send_body"
		};
	};

	rpc SetBalanceReward(SetBalanceRewardRequest) returns (SetBalanceRewardReply) {
		option (google.api.http) = {
			post: "/api/app_server/set_balance_reward"
			body: "send_body"
		};
	};

	rpc DeleteBalanceReward(DeleteBalanceRewardRequest) returns (DeleteBalanceRewardReply) {
		option (google.api.http) = {
			post: "/api/app_server/delete_balance_reward"
			body: "send_body"
		};
	};

	rpc Deposit (DepositRequest) returns (DepositReply) {
		option (google.api.http) = {
			get: "/api/admin_dhb/deposit"
		};
	};
//
//	rpc AdminRewardList (AdminRewardListRequest) returns (AdminRewardListReply) {
//		option (google.api.http) = {
//			get: "/api/admin_dhb/reward_list"
//		};
//	};
//
//	rpc AdminUserList (AdminUserListRequest) returns (AdminUserListReply) {
//		option (google.api.http) = {
//			get: "/api/admin_dhb/user_list"
//		};
//	};
//
//	rpc AdminLocationList (AdminLocationListRequest) returns (AdminLocationListReply) {
//		option (google.api.http) = {
//			get: "/api/admin_dhb/location_list"
//		};
//	};
//
//	rpc AdminWithdrawList (AdminWithdrawListRequest) returns (AdminWithdrawListReply) {
//		option (google.api.http) = {
//			get: "/api/admin_dhb/withdraw_list"
//		};
//	};
//
	rpc AdminWithdraw (AdminWithdrawRequest) returns (AdminWithdrawReply) {
		option (google.api.http) = {
			get: "/api/admin_dhb/withdraw"
		};
	};

	rpc AdminWithdrawEth (AdminWithdrawEthRequest) returns (AdminWithdrawEthReply) {
		option (google.api.http) = {
			get: "/api/admin_dhb/withdraw_eth"
		};
	};

	rpc AdminFee (AdminFeeRequest) returns (AdminFeeReply) {
		option (google.api.http) = {
			get: "/api/admin_dhb/fee"
		};
	};

	rpc TokenWithdraw (TokenWithdrawRequest) returns (TokenWithdrawReply) {
		option (google.api.http) = {
			get: "/api/app_server/token_withdraw"
		};
	};
//
//	rpc AdminAll (AdminAllRequest) returns (AdminAllReply) {
//		option (google.api.http) = {
//			get: "/api/admin_dhb/all"
//		};
//	};
//
//	rpc AdminUserRecommend (AdminUserRecommendRequest) returns (AdminUserRecommendReply) {
//		option (google.api.http) = {
//			get: "/api/admin_dhb/user_recommend"
//		};
//	};
//
//	rpc AdminMonthRecommend (AdminMonthRecommendRequest) returns (AdminMonthRecommendReply) {
//		option (google.api.http) = {
//			get: "/api/admin_dhb/month_recommend"
//		};
//	};
//
//	rpc AdminConfig (AdminConfigRequest) returns (AdminConfigReply) {
//		option (google.api.http) = {
//			get: "/api/admin_dhb/config"
//		};
//	};
//
//	rpc AdminConfigUpdate (AdminConfigUpdateRequest) returns (AdminConfigUpdateReply) {
//		option (google.api.http) = {
//			post: "/api/admin_dhb/config_update"
//			body: "send_body"
//		};
//	};

}

message EthAuthorizeRequest {
	message SendBody{
		string address = 1;
		string code = 2;
		string password = 3;
	}

	SendBody send_body = 1;
}

message EthAuthorizeReply {
	string token = 1;
}

message RecommendUpdateRequest {
	message SendBody{
		string code = 1;
	}

	SendBody send_body = 1;
}

message RecommendUpdateReply {
	string inviteUserAddress = 1;
}

message DepositRequest {
}

message DepositReply {
}

message UserInfoRequest {

}

message UserInfoReply {
	string address = 1; // 地址
	int64 level = 2; // vip
	int64 useVip = 102; // 1vip账户0普通账户
	int64 levelOk = 101; // 有效用户1，无效0
	string amountAll = 3;
	string amount = 4; // 未释放csd
	string balanceUsdtLock = 82; // 已释放csd金额
	string balanceDhbLock = 83; // 已释放hbs金额
	string balanceZkf = 5; // 余额zkf
	string balanceDhb = 6; // 可提余额hbs
	string teamCsdBalance = 12; // 团队可提余额csd
	string inviteUrl = 7; // 邀请链接
	string inviteUserAddress = 8; // 我的推荐人的地址
	int64 recommendNum = 9; // 历史推荐人数
	int64 recommendTeamNum = 10; // 团队人数
	string total = 11; // 总收益
	string totalHbs = 98; // hbs总收益
	string recommendTotal = 15; // 直推奖总
	string recommendTotalLocation = 92; // 投资直推奖总
	string recommendHbsTotal = 93; // hbs直推奖总
	string usdt = 20; // csd地址
	string zkf = 23; // zkf地址
	string account = 22; // 收款账户地址
	string amountB = 27;
	string recommendLevelTotal = 28; // 平级奖总
	string recommendLevelHbsTotal = 94; // hbs平级奖总
	string feeDaily = 29;
	string withdrawAmount = 30;
	string userCount = 31;
	string totalDeposit = 32;
	string poolAmount = 34;
	int64 locationCount = 35;
	string todayReward = 36;
	string areaAmount = 42;
	string recommendSecondTotal = 43; // 间推奖总
	string recommendSecondHbsTotal = 95; // hbs间推奖总
	string areaMaxAmount = 44;
	int64  undo = 45;
	string AmountC = 46;
	string AmountBalanceReward = 47;
	string areaName = 48;
	string recommendTeamTotal = 49; // 团队奖总
	string recommendTeamHbsTotal = 96; // hbs团队奖总
	string locationDailyRewardTotal = 50; // 投资奖总
	string dailyBalanceRewardTotal = 51;

	string yesterdayRecommendTeamTotal = 58;
	string yesterdayLocationDailyRewardTotal = 59;
	string yesterdayDailyBalanceRewardTotal = 60;
	string yesterdayRecommendAreaTotal = 61;
	string yesterdayRecommendTotal = 62;
	string totalAreaAmount = 63;
	string locationRunningAmount = 64;

	repeated List LocationList = 52; // 投资列表
	message List {
		string created_at = 1;
		string amount = 2;
		string amountMax = 4; // 认购usdt金额
		string amountZkf = 3; // zkf金额
		int64 term = 5;
	}

	repeated List2 recommendTeamList = 53; // 团队受益列表
	message List2 {
		string created_at = 1;
		string amount = 2;
		string amountB = 3;
	}

	repeated List4 locationDailyRewardList = 55; // 投资每日释放受益列表
	message List4 {
		string created_at = 1;
		string amount = 2;
		string amountB = 3;
	}

	repeated List5 recommendList = 56; // 直推受益列表
	message List5 {
		string created_at = 1;
		string amount = 2;
		string amountB = 3;
	}

	repeated List14 recommendLocationList = 99; // 投资直推受益列表
	message List14 {
		string created_at = 1;
		string amount = 2;
		string amountB = 3;
	}

	repeated List6 secondRecommendList = 57; // 间推受益列表
	message List6 {
		string created_at = 1;
		string amount = 2;
		string amountB = 3;
	}

	repeated List8 levelRecommendList = 54; // 平级受益列表
	message List8 {
		string created_at = 1;
		string amount = 2;
		string amountB = 3;
	}

	repeated List7 teamAddressList = 65; // 团队列表
	message List7 {
		string address = 1;
		string Amount = 2;
		string Usdt = 3;
		int64 Vip = 4;
		int64 UseVip = 5;
		int64 levelOk = 6;
	}

	repeated List11 recommendAddressList = 66; // 团队列表
	message List11 {
		string address = 1;
		string Amount = 2;
		string Usdt = 3;
		int64 Vip = 4;
		int64 UseVip = 5;
		int64 levelOk = 6;
	}

	repeated List9 allRewardList = 67;
	message List9 {
		string created_at = 1;
		string amount = 2;
		string amountB = 3;
	}

	repeated List13 depositList = 100;
	message List13 {
		string created_at = 1;
		string amount = 2;
		string coinType = 3;
	}

	int64 level1price = 70;
	int64 level2price = 71;
	int64 level3price = 72;
	int64 level4price = 73;
	string level1csd = 74;
	string level2csd = 75;
	string level3csd = 76;
	string level4csd = 77;
	int64 term = 78;
	int64 withdrawDestroyRate = 80;
	int64 withdrawRate = 81;
}

message RewardListRequest {
	string type = 1;
}

message RewardListReply {
	repeated List rewards = 1;
	message List {
		string  created_at = 1;
		string amount = 2;
		string locationStatus = 3;
		string type = 4;
	}
}

message GetTradeRequest {
	message SendBody{
		string amount = 1;
	}

	SendBody send_body = 1;
}

message GetTradeReply {
	string amountCsd = 1;
	string amountHbs = 2;
}

message RecommendRewardListRequest {
}

message RecommendRewardListReply {
	repeated List rewards = 1;
	message List {
		string created_at = 1;
		string amount = 2;
		string type = 4;
		string reason = 3;
	}
}

message FeeRewardListRequest {
}

message  FeeRewardListReply {
	repeated List rewards = 1;
	message List {
		string created_at = 1;
		string amount = 2;
	}
}

message WithdrawListRequest {
	string type = 1;
}

message WithdrawListReply {
	repeated List withdraw = 1;
	message List {
		string  created_at = 1;
		string amount = 2;
		string type = 3;
		string status=4;
	}
}

message TradeListRequest {
}

message TradeListReply {
	repeated List trade = 1;
	message List {
		string created_at = 1;
		string amountCsd = 2;
		string amountHbs = 5;
		string status = 4;
	}
}

message TranListRequest {
	string type = 1;
	string tran = 2;
}

message TranListReply {
	repeated List tran = 1;
	message List {
		string created_at = 1;
		string amount = 2;;
	}
}

message RecommendListRequest {
	string type = 1;
}

message RecommendListReply {
	repeated List recommends = 1;
	message List {
		string amount = 2;
		string status = 3;
	}
}

message WithdrawRequest {
	message SendBody{
		string type = 2;
		string amount = 1;
		string password = 3;
	}

	SendBody send_body = 1;
}

message WithdrawReply {
	string status = 1;
}

message PasswordChangeRequest {
	message SendBody{
		string password = 2;
	}

	SendBody send_body = 1;
}

message PasswordChangeReply {
	string password = 1;
}

message TranRequest {
	message SendBody{
		string type = 2;
		string amount = 1;
		string address = 3;
		string password = 4;
	}

	SendBody send_body = 1;
}

message TranReply {
	string status = 1;
}

message SetBalanceRewardRequest {
	message SendBody{
		string amount = 1;
	}

	SendBody send_body = 1;
}

message SetBalanceRewardReply {
	string status = 1;
}

message DeleteBalanceRewardRequest {
	message SendBody{
		string amount = 1;
	}

	SendBody send_body = 1;
}

message DeleteBalanceRewardReply {
	string status = 1;
}

message AdminRewardListRequest {
	int64 page = 1;
	string address = 2;
}

message AdminRewardListReply {
	repeated List rewards = 1;
	message List {
		string created_at = 1;
		string amount = 2;
		string type = 4;
		string address = 5;
		string reason = 6;
	}
	 int64 count = 2;
}

message AdminUserListRequest {
	int64 page = 1;
	string address = 2;
}

message AdminUserListReply {
	repeated UserList users = 1;
	message UserList {
		int64 user_id = 8;
		string created_at = 1;
		string address = 2;
		string balanceUsdt = 3;
		string balanceDhb = 4;
		int64 vip = 5;
		int64 monthRecommend = 7;
		int64 historyRecommend = 6;
	}
	int64 count = 2;
}

message AdminLocationListRequest {
	int64 page = 1;
	string address = 2;
}

message AdminLocationListReply {
	repeated LocationList locations = 1;
	message  LocationList {
		string created_at = 1;
		string address = 2;
		int64 row = 3;
		int64 col = 4;
		string status = 5;
		int64 currentLevel = 6;
		string current = 7;
		string currentMax = 8;
	}
	int64 count = 2;
}

message AdminWithdrawListRequest {
	int64 page = 1;
	string address = 2;
}

message AdminWithdrawListReply {
	repeated List withdraw = 1;
	message List {
		string address = 5;
		int64  id = 7;
		string created_at = 1;
		string amount = 2;
		string relAmount = 6;
		string type = 3;
		string status=4;
	}
	int64 count = 2;
}

message AdminWithdrawRequest {
}

message AdminWithdrawReply {
}

message AdminWithdrawEthRequest {
}

message AdminWithdrawEthReply {
}

message AdminFeeRequest {
}

message AdminFeeReply {
}

message TokenWithdrawRequest {
}

message TokenWithdrawReply {
}


message AdminAllRequest {
}

message AdminAllReply {
	int64 todayTotalUser = 1;
	int64 totalUser = 2;
	string allBalance = 3;
	string todayLocation = 4;
	string allLocation = 5;
	string todayWithdraw = 6;
	string allWithdraw = 7;
	string allReward = 8;
	string allSystemRewardAndFee = 9;
}

message AdminUserRecommendRequest {
	int64 user_id = 1;
}

message AdminUserRecommendReply {
	repeated List users = 1;
	message List {
		int64 user_id = 4;
		string address = 3;
		int64  id = 2;
		string created_at = 1;
	}
}

message AdminMonthRecommendRequest {
	string address = 1;
	int64 page = 2;
}

message AdminMonthRecommendReply {
	repeated List users = 1;
	message List {
		string address = 3;
		string recommendAddress = 4;
		int64  id = 2;
		string created_at = 1;
	}
	int64 count = 2;
}

message AdminConfigRequest {
	int64 userId = 1;
	int64 page = 2;
}

message AdminConfigReply {
	repeated List config = 1;
	message List {
		int64 id = 1;
		string name = 3;
		string value = 2;
	}
	int64 count = 2;
}

message AdminConfigUpdateRequest {
	message SendBody{
		int64 id = 1;
		string value = 2;
	}

	SendBody send_body = 1;
}

message AdminConfigUpdateReply {

}